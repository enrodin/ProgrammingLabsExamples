/*
 ┌───────────────────────────────────────────────────────────────────────────────────────────┐
 │ Практическое занятие №9.                                                                  │
 ├───────────────────────────────────────────────────────────────────────────────────────────┤
 │ Сортировка массивов.                                                                      │
 ├───────────────────────────────────────────────────────────────────────────────────────────┤
 │ Пример 2. Сортировка простым выбором.                                                     │
 ├───────────────────────────────────────────────────────────────────────────────────────────┤
 │ Напишите программу, которая запрашивает у пользователя параметры массива,                 │ 
 │ генерирует массив символов, а затем сортирует его методом простого выбора по возрастанию. │
 └───────────────────────────────────────────────────────────────────────────────────────────┘
 
 ┌───────────────────────────────────────────────────────────────────────────────────────────┐
 │ Выполнение программы.                                                                     │
 ├─────────────────────────────────────────────┬─────────────────────────────────────────────┤
 │ Входные данные:                             │ Выходные данные:                            │
 ├─────────────────────────────────────────────┼─────────────────────────────────────────────┤
 │ размерность массива:                        │ отсортированный массив:                     │
 │ itemCount = 7                               │ array = {'А', 'Г', 'Е', 'З', 'Л', 'М', 'Н'} │ 
 │ минимальное значение:                       │                                             │
 │ minValue = 'А'                              │                                             │
 │ максимальное значение:                      │                                             │
 │ maxValue = 'П'                              │                                             │
 │ исходный массив:                            │                                             │
 │ array = {'Г', 'Л', 'А', 'З', 'М', 'Е', 'Н'} │                                             │
 └─────────────────────────────────────────────┴─────────────────────────────────────────────┘
 */

namespace Lab_09_02
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.Title = "Практическое занятие №9. Пример 2.";

            Console.Write("Введите размерность массива: ");
            var itemCount = int.Parse(Console.ReadLine());

            Console.Write("Введите минимальное значение массива: ");
            var minValue = char.Parse(Console.ReadLine());

            Console.Write("Введите максимальное значение массива: ");
            var maxValue = char.Parse(Console.ReadLine());

            var array = new char[itemCount];

            var rnd = new Random();

            Console.WriteLine("Исходный массив:");

            var line = new string('─', array.Length * 6 - 1);

            Console.WriteLine($"┌{line}┐");
            for (var i = 0; i < array.Length; i++)
            {
                array[i] = (char)rnd.Next(minValue, maxValue + 1);
                Console.Write($"│  {array[i]}  ");
            }
            Console.WriteLine("│");
            Console.WriteLine($"└{line}┘");

            for (var i = 0; i < array.Length - 1; i++)
            {
                var minIndex = i;

                for (int j = i + 1; j < array.Length; j++)
                {
                    if (array[minIndex] > array[j])
                    {
                        minIndex = j;
                    }
                }

                var tmp         = array[minIndex];
                array[minIndex] = array[i];
                array[i]        = tmp;
            }

            Console.WriteLine("Отсортированный массив:");

            Console.WriteLine($"┌{line}┐");
            foreach (var item in array)
            {
                Console.Write($"│  {item}  ");
            }
            Console.WriteLine("│");
            Console.WriteLine($"└{line}┘");

            Console.ReadLine();
        }
    }
}
